// Code generated by entc, DO NOT EDIT.

package ent

import (
	"blog/internal/data/ent/article"
	"blog/internal/data/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	articleFields := schema.Article{}.Fields()
	_ = articleFields
	// articleDescTitle is the schema descriptor for title field.
	articleDescTitle := articleFields[0].Descriptor()
	// article.DefaultTitle holds the default value on creation for the title field.
	article.DefaultTitle = articleDescTitle.Default.(string)
	// articleDescContent is the schema descriptor for content field.
	articleDescContent := articleFields[1].Descriptor()
	// article.DefaultContent holds the default value on creation for the content field.
	article.DefaultContent = articleDescContent.Default.(string)
	// articleDescCreatedBy is the schema descriptor for created_by field.
	articleDescCreatedBy := articleFields[2].Descriptor()
	// article.DefaultCreatedBy holds the default value on creation for the created_by field.
	article.DefaultCreatedBy = articleDescCreatedBy.Default.(int64)
	// articleDescUpdatedBy is the schema descriptor for updated_by field.
	articleDescUpdatedBy := articleFields[3].Descriptor()
	// article.DefaultUpdatedBy holds the default value on creation for the updated_by field.
	article.DefaultUpdatedBy = articleDescUpdatedBy.Default.(int64)
	// articleDescType is the schema descriptor for type field.
	articleDescType := articleFields[4].Descriptor()
	// article.DefaultType holds the default value on creation for the type field.
	article.DefaultType = articleDescType.Default.(int64)
	// articleDescCityID is the schema descriptor for city_id field.
	articleDescCityID := articleFields[5].Descriptor()
	// article.DefaultCityID holds the default value on creation for the city_id field.
	article.DefaultCityID = articleDescCityID.Default.(int64)
}
